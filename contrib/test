#!/bin/bash -eu

source "$(dirname $0)/build-support"

function usage() {
  echo "Usage: "
  echo "    $0 -a [-o <test options>] [-d <cgdb|gdb>]"
  echo " "
  echo "-a                Run integration tests"
  echo "-o <options>      Pass additional flags to integration tests"
  echo "-d <debugger>     Run integration tests in debugger - accepts gdb or cgdb"
  exit
}

# Construct a sane build environment
setup_geard_build_env

# Options parsing
test_integration=false
test_opts=""
debug=false
debugger=""
geard_home=$(cd `dirname $0`/..; pwd)

while getopts "ad:o:" o; do
  case "${o}" in
    (a) test_integration=true;;
    (o) test_opts=${OPTARG:-};;
    (d) debug=true; debugger=${OPTARG};;
    (?) usage; break;;
  esac
done

echo "Downloading test dependencies"
go get -d -t github.com/gorilla/context github.com/gorilla/mux launchpad.net/gocheck
echo "..done"

rm -f tests.test

pushd $geard_home >/dev/null
  go test $(find . -name *_test.go -printf "%h\n" | grep -v /vendor/ | grep -v /tests | sort | uniq | xargs echo)
popd >/dev/null

if $test_integration; then
  echo "Building test images"
  for image_dir in $geard_home/tests/images/*/; do
    pushd $image_dir >/dev/null
      image_name=$(basename $image_dir)
      echo " ---> $image_name"
      docker build -t openshift/$image_name .
    popd >/dev/null
  done

  echo -e "\nRunning integration tests\n"

  # build the sti images needed for the gear build integration tests
  echo -e "Building sti test images...."
  $geard_home/sti/test_images/buildimages.sh
  echo -e "done"
  go test -tags integration -c github.com/openshift/geard/tests $test_opts

  if $debug; then
    exec sudo -E $debugger ./tests.test
  else
    sudo -E ./tests.test -gocheck.v $test_opts
  fi

  go test github.com/openshift/geard/sti -integration
fi

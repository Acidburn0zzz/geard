#!/bin/bash
set -e

GIT_DIR=$1
REPO_UID=$2
REPO_GID=$3
URL=$4
COMMIT=$5
hooks_dir=/git/default-hooks

if [ "$GIT_DIR" == "" ]; then
	echo "ERROR: Git directory not specified."
	exit 1
fi

if [ "$REPO_UID" == "" ] || [ "$REPO_GID" == "" ]; then
	echo "ERROR: REPO_UID/REPO_GID directory not specified"
	exit 1
fi

if [ -d "$GIT_DIR/objects" ]; then
  echo "SKIP: Repository exists"
  chown $REPO_UID:$REPO_GID -R $GIT_DIR $GIT_DIR/.git
  exit 0
fi

if [ ! -x "$GIT_DIR" ] || [ ! -w "$GIT_DIR" ]; then
  echo "ERROR: Cannot write to $GIT_DIR"
  exit 1
fi

git --version

pushd $GIT_DIR > /dev/null
if [ "$URL" != "" ] && [ "$URL" != "empty" ]; then
  echo "Using $URL"
  git clone --bare --no-hardlinks --progress "$URL" .
  git config core.logAllRefUpdates true
  if [ "$COMMIT" != "" ]; then
    echo "Using COMMIT $COMMIT"
    git reset --soft "$COMMIT"
  fi
  git show-ref --verify --quiet refs/heads/master
  if [ $? -ne 0 ]; then
    git branch master
  fi
  git config pack.windowMemory 64m
  git repack
else
  git init --bare
  git config core.logAllRefUpdates true
  git config pack.windowMemory 64m
fi

mkdir -p ./.git/hooks
cp $hooks_dir/* ./.git/hooks
chmod ug+x ./.git/hooks/*
chown $REPO_UID:$REPO_GID -R $GIT_DIR $GIT_DIR/.git

